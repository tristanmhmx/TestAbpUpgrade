version: '3.7'

services:
  testupgrade-web:
    image: mycompanyname/testupgrade-web:latest
    container_name: testupgrade-web
    build:
      context: ../../../
      dockerfile: angular/Dockerfile.local      
    ports:
      - "4200:80"
    depends_on:
      - testupgrade-api
    volumes:
      - ./dynamic-env.json://usr/share/nginx/html/dynamic-env.json
    networks:
      - abp-network  

  testupgrade-api:
    image: mycompanyname/testupgrade-api:latest
    container_name: testupgrade-api-container
    build:
      context: ../../
      dockerfile: TestUpgrade/Dockerfile.local
    environment:
      - ASPNETCORE_URLS=https://+:443;http://+:80;
      - Kestrel__Certificates__Default__Path=/root/certificate/localhost.pfx
      - Kestrel__Certificates__Default__Password=91f91912-5ab0-49df-8166-23377efaf3cc
      - App__SelfUrl=https://localhost:44305
      - AuthServer__Authority=http://testupgrade-api
      - AuthServer__RequireHttpsMetadata=false
      - AuthServer__SetSelfAsIssuer=true      
      - Redis__Configuration=redis
      - ConnectionStrings__Default=mongodb://mongodb/TestUpgrade
    ports:
      - "44305:443"
    depends_on:
      redis:
        condition: service_healthy  
      mongodb:
        condition: service_healthy
    restart: on-failure    
    volumes:
      - ./certs:/root/certificate
    networks:
      - abp-network  
  
  db-migrator:
    image: mycompanyname/testupgrade-api:latest
    container_name: db-migrator
    build:
      context: ../../
      dockerfile: TestUpgrade/Dockerfile.local
    environment:
      - ConnectionStrings__Default=mongodb://mongodb/TestUpgrade
    command:
      - --migrate-database
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - abp-network    
  mongodb:
    container_name: mongodb
    image: mongo:4.2
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - abp-network
    healthcheck:
      test: echo 'db.stats().ok' | mongo localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 10

  redis:
    container_name: redis
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - abp-network  
    healthcheck:
      test: ["CMD", "redis-cli","ping"]      

volumes:
  mongodb_data:
    name: mongodb_data

networks:
  abp-network:
    name: testupgrade-network
    driver: bridge